{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Folder","props","useState","isOpen","setIsOpen","name","children","direction","onClick","className","style","marginLeft","File","fileExtension","split","mp4","mp3","jpeg","png","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAeA,IAAMA,EAAS,SAACC,GACb,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACQC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SACRC,EAAYJ,EAAS,OAAS,QAEpC,OAAO,gCACJ,uBAAMK,QAFW,kBAAMJ,GAAWD,IAElC,UACG,mBAAGM,UAAU,qBACb,mBAAGA,UAAS,gBAAWF,EAAX,cAEdF,EACD,qBAAKK,MAAO,CAAEC,WAAY,QAA1B,SACIR,EAASG,EAAW,WAKxBM,EAAO,SAACX,GACX,IAAQI,EAASJ,EAATI,KACFQ,EAAgBR,EAAKS,MAAM,KAAK,GAOtC,OAAO,oCAAM,mBAAGL,UAAS,WANP,CACfM,IAAK,aACLC,IAAK,YACLC,KAAM,aACNC,IAAK,sBAEiCL,GAAhB,WAA4CR,EAA9D,QAIKc,EA3Cf,WACG,OAAO,gCACJ,eAAC,EAAD,CAAQd,KAAK,UAAb,UACG,eAAC,EAAD,CAAQA,KAAK,QAAb,UACG,cAAC,EAAD,CAAMA,KAAK,mBACX,cAAC,EAAD,CAAMA,KAAK,sBAEd,cAAC,EAAD,CAAMA,KAAK,cACX,cAAC,EAAD,CAAMA,KAAK,eAEd,cAAC,EAAD,CAAQA,KAAK,qBCAJe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f070e6a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n   return <div>\n      <Folder name=\"Desktop\">\n         <Folder name=\"music\">\n            <File name=\"ed_sheeran.mp4\" />\n            <File name=\"levitating.mp3\" />\n         </Folder>\n         <File name=\"dogs.jpeg\" />\n         <File name=\"cat.png\" />\n      </Folder>\n      <Folder name=\"Applications\" />\n   </div>\n}\nconst Folder = (props) => {\n   const [isOpen, setIsOpen] = useState(true);\n   const { name, children } = props;\n   const direction = isOpen ? 'down' : 'right';\n   const handleClick = () => setIsOpen(!isOpen);\n   return <div>\n      <span onClick={handleClick}>\n         <i className=\"blue folder icon\"></i>\n         <i className={`caret ${direction} icon`}></i>\n      </span>\n      {name}\n      <div style={{ marginLeft: '17px' }}>\n         {isOpen ? children : null}\n      </div>\n   </div>\n};\n\nconst File = (props) => {\n   const { name } = props;\n   const fileExtension = name.split('.')[1];\n   const fileIcons = {\n      mp4: 'headphones',\n      mp3: 'headphone',\n      jpeg: 'file image',\n      png: 'file image outline'\n   };\n   return <div> <i className={` ${fileIcons[fileExtension]} icon`}></i>{name} </div>\n\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}